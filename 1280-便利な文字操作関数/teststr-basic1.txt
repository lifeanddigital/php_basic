
便利な文字列操作関数
ここでPHPで、テキスト操作をするのに便利な関数を紹介します。


□基本的な文字列関数
まずは、長さを調べたり、一部分を取り出したり、検索したりといった基本的な関数から紹介します。ちなみに、substr（）
関数の初期の中に「｛$len｝」と角括弧が括られたものがあります。これは、省略可能な引数を意味する記号です。


表3基本的な文字列関数

<table>
<thead>
<tr><th>関数名</th><th>説明</th></tr>
</thead>
<tbody>
<tr><td>trim($str)<td><td>strにある前後の空白を除去する</td>
<tr><td>strlen($str)</td><td><文字列の長さを調べてバイト数で返す/td></tr>
<tr><td>substr（$str,$start［,&$len］）</td><td>$strで$startから$lenバイトの文字列を返す。$lenを省略すると、$start以後のすべての文字列を返す。$startに負数を指定すると後ろから$lenバイトを返す</td></tr>
<tr><td>strposs（$str,$key［,$offset］）</td><td>$strの中で$keyが何バイト目に出てくるか調べて返す</td></tr>
</tbody>
</table>


これらの基本的な関数を含め、ここで、紹介する関数を使う上で注意しなくては、ならないのは、文字数では、なくバイト数であるという部分です。PHPの多言語化対応は、限定的なため一般的な文字列関数のstrlen()は、半角で、数えた場合の文字数（すなわちバイト数）を返します。当然、日本語を考慮し文字数を返す命令も用意されていますが、
これについては、「第14章日本語処理」の部分で、扱います。
以下、文字列を操作する関数の利用例です。